
# Arch: x86_64
FROM centos:7

SHELL ["/bin/bash", "-c"]

ARG BUILD=x86_64-unknown-linux-gnu
ARG TARGET=x86_64-w64-mingw32
ARG TARGET_X86=i686-w64-mingw32
ARG BUILDROOT=/usr/local
ARG SRC=$BUILDROOT/_src
ARG MINGW=$BUILDROOT/mingw32
ARG PREFIX=$MINGW

ARG CFLAGS=
ARG CXXFLAGS=
ARG LDFLAGS=

ENV PATH $PREFIX/bin:$PATH

ARG GCC_VER=10.1.0
ARG BINUTILS_VER=2.34
ARG MPFR_VER=4.0.2
ARG GMP_VER=6.2.0
ARG MPC_VER=1.1.0
ARG ISL_VER=0.21

ARG MINGW_VER=7.0.0

# Red Hat Developer Toolset
ARG RH_DTS_VER=9
ARG RH_DTS_GCC_VER=9.3.1-2

# Clang and LLVM Toolset
ARG RH_LTS_VER=7.0
ARG RH_RUBY_VER=26

# non-root, nopasswd sudoer in *wheel* group
ARG NONROOT_USER=centos
ARG NONROOT_UID=1000
ARG NONROOT_GRP=$NONROOT_USER
ARG NONROOT_GID=$NONROOT_UID


RUN sed -i 's/^tsflags=nodocs$/# tsflags=nodocs/' /etc/yum.conf \
    && yum -y reinstall "*" && yum clean all \
\
    && yum install -y centos-release-scl epel-release && yum makecache && yum update -y \
    && yum install -y devtoolset-${RH_DTS_VER}-gcc-c++-${RH_DTS_GCC_VER}.el7 devtoolset-${RH_DTS_VER}-make bison flex gperf patch autoconf automake \
        libtool gettext-devel bzip2 unzip file texinfo glibc-devel glibc-devel.i686 llvm-toolset-${RH_LTS_VER}-cmake rh-ruby${RH_RUBY_VER} meson sudo wget man man-pages \
        glibc-static.i686 glibc-static.x86_64 \
    && yum localinstall -y https://yum.oracle.com/repo/OracleLinux/OL7/SoftwareCollections/x86_64/getPackage/devtoolset-${RH_DTS_VER}-libstdc++-devel-${RH_DTS_GCC_VER}.el7.i686.rpm \
    && yum clean all \
\
    && echo -e "source scl_source enable devtoolset-${RH_DTS_VER}\nsource scl_source enable llvm-toolset-${RH_LTS_VER}\nsource scl_source enable rh-ruby${RH_RUBY_VER}\n\
unset BASH_ENV PROMPT_COMMAND ENV" > /usr/bin/scl_enable_centos7 \
    && echo -e "PATH=$MINGW/bin:\$PATH\nPATH=\$(echo -n \$PATH | awk -v RS=: -v FS=: '!(\$1 in a) {a[\$1]; if (length(a) > 1) printf \":\"; printf \$1}')\nexport PATH=\$PATH"  \
>> /usr/bin/scl_enable_centos7 \
    && chmod +x /usr/bin/scl_enable_centos7 && source /usr/bin/scl_enable_centos7 \
    && gem install rake && pip3 install --upgrade --no-cache-dir meson \
\
\
    && mkdir -p $MINGW && mkdir -p $SRC && cd $SRC \
    && curl -L -O https://ftp.gnu.org/gnu/gcc/gcc-$GCC_VER/gcc-$GCC_VER.tar.xz \
    && curl -L -O https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS_VER.tar.xz \
    && curl -L -O https://ftp.gnu.org/gnu/mpfr/mpfr-$MPFR_VER.tar.xz \
    && curl -L -O https://ftp.gnu.org/gnu/gmp/gmp-$GMP_VER.tar.xz \
    && curl -L -O https://ftp.gnu.org/gnu/mpc/mpc-$MPC_VER.tar.gz \
    && curl -L -O https://distfiles.macports.org/isl/isl-$ISL_VER.tar.bz2 \
    && curl -L -o mingw-w64-$MINGW_VER.tar.gz https://github.com/mirror/mingw-w64/archive/v$MINGW_VER.tar.gz \
\
    && tar Jxvf gcc-$GCC_VER.tar.xz \
    && tar Jxvf binutils-$BINUTILS_VER.tar.xz \
    && tar Jxvf mpfr-$MPFR_VER.tar.xz \
    && tar Jxvf gmp-$GMP_VER.tar.xz \
    && tar zxvf mpc-$MPC_VER.tar.gz \
    && tar jxvf isl-$ISL_VER.tar.bz2 \
    && tar zxvf mingw-w64-$MINGW_VER.tar.gz \
\
    && mv mpfr-$MPFR_VER gcc-$GCC_VER/mpfr \
    && mv gmp-$GMP_VER gcc-$GCC_VER/gmp \
    && mv mpc-$MPC_VER gcc-$GCC_VER/mpc \
    && mv isl-$ISL_VER gcc-$GCC_VER/isl \
\
    && mkdir -p $BUILDROOT/binutils \
    && cd $BUILDROOT/binutils \
    && $SRC/binutils-$BINUTILS_VER/configure --prefix=$PREFIX --with-sysroot=$PREFIX \
        --target=$TARGET --enable-targets=x86_64-w64-mingw32,i686-w64-mingw32 --build=$BUILD \
    && make -j `nproc` && make install \
\
    && mkdir -p $BUILDROOT/headers \
    && cd $BUILDROOT/headers \
    && $SRC/mingw-w64-$MINGW_VER/mingw-w64-headers/configure --prefix=$PREFIX/$TARGET --host=$TARGET --build=$BUILD \
    && make install \
\
    && ln -s $PREFIX/$TARGET $PREFIX/mingw \
    && mkdir -p $PREFIX/$TARGET/lib && mkdir -p $PREFIX/$TARGET/lib32 \
    && ln -s $PREFIX/$TARGET/lib $PREFIX/$TARGET/lib64 \
\
    && mkdir -p $BUILDROOT/gcc \
    && cd $BUILDROOT/gcc \
    && $SRC/gcc-$GCC_VER/configure --build=$BUILD --target=$TARGET \
        --enable-targets=x86_64-w64-mingw32,i686-w64-mingw32 --prefix=$PREFIX --with-sysroot=$PREFIX \
        --enable-languages=c,c++ --enable-multiarch --enable-multilib --with-multilib-list=m32,m64 --enable-64bit \
        --enable-threads=posix --enable-shared --enable-fully-dynamic-string \
        --enable-libgomp --enable-lto --disable-libstdcxx-pch \
    && make all-gcc -j `nproc` && make install-gcc \
\
    && mkdir -p $BUILDROOT/mingw \
    && cd $BUILDROOT/mingw \
    && $SRC/mingw-w64-$MINGW_VER/mingw-w64-crt/configure --prefix=$PREFIX/$TARGET --with-sysroot=$PREFIX --host=$TARGET \
        --enable-lib32=yes --enable-lib64=yes \
    && make -j `nproc` && make install \
\
    && mkdir -p $BUILDROOT/mingw-wpthreads \
    && cd $BUILDROOT/mingw-wpthreads \
    && $SRC/mingw-w64-$MINGW_VER/mingw-w64-libraries/winpthreads/configure --prefix=$PREFIX/$TARGET --host=$TARGET \
    && make -j `nproc` && make install \
    && rm -rf * \
    && CC="$TARGET-gcc -m32" CCAS="$TARGET-gcc -m32" DLLTOOL="$TARGET-dlltool -m i386" \
        RC="$TARGET-windres -F pe-i386" $SRC/mingw-w64-$MINGW_VER/mingw-w64-libraries/winpthreads/configure \
        --prefix=$PREFIX/$TARGET --host=$TARGET_X86 --libdir=$PREFIX/$TARGET/lib32 \
    && make -j `nproc` && make install \
\
    && cd $BUILDROOT/gcc \
    && make all-target-libgcc -j `nproc` && make install-target-libgcc \
\
    && cd $BUILDROOT/gcc \
    && make -j `nproc` && make install \
\
    && cd $BUILDROOT && rm -rf $BUILDROOT/binutils $BUILDROOT/headers $BUILDROOT/gcc $BUILDROOT/mingw $BUILDROOT/mingw-wpthreads \
    && rm -rf $SRC \
    && strip -s $MINGW/bin/$TARGET-* && strip -s $MINGW/$TARGET/lib/*.dll && strip -s $MINGW/$TARGET/lib32/*.dll \
    && cd $MINGW/libexec/gcc/$TARGET/$GCC_VER && strip -s cc1 cc1plus collect2 lto-wrapper lto1 \
\
    && cd $MINGW/lib/gcc/$TARGET/$GCC_VER && $TARGET-gcc -dumpspecs > specs \
    && sed -i '/\*cpp:/!b; n; s%\(.*\)%\1 -I/opt/mingw32/x86_64-w64-mingw32/include -I/opt/mingw32/i686-w64-mingw32/include -I/opt/mingw32/include%' specs \
    && sed -i '/\*cc1plus:/!b; n; s%\(.*\)%\1 -I/opt/mingw32/x86_64-w64-mingw32/include -I/opt/mingw32/i686-w64-mingw32/include -I/opt/mingw32/include%' specs \
    && sed -i '/\*link_libgcc:/!b; n; s%\(.*\)%\1 -L/opt/mingw32/x86_64-w64-mingw32/lib -L/opt/mingw32/i686-w64-mingw32/lib -L/opt/mingw32/lib%' specs \
\
    && echo -e ". /usr/bin/scl_enable_centos7" >> /etc/profile.d/enable_mingw_scl.sh \
    && sed -i 's%^exec .*"\$cmd_options"$%if [ "\$cmd_options" == "" ]; then\n    exec /usr/bin/sudo \$sudo_options\nelse\n    exec /usr/bin/sudo \$sudo_options \
env PATH="\$PATH" LD_LIBRARY_PATH="\$LD_LIBRARY_PATH" scl enable devtoolset-'${RH_DTS_VER}' llvm-toolset-'${RH_LTS_VER}' rh-ruby'${RH_RUBY_VER}' "\$cmd_options"\nfi%' \
/opt/rh/devtoolset-${RH_DTS_VER}/root/usr/bin/sudo \
    && sed -i '/^%wheel/!b; s/^/# /; n; n; n; s/^# //' /etc/sudoers \
    && groupadd -g ${NONROOT_GID} ${NONROOT_GRP} && useradd -u ${NONROOT_UID} -g ${NONROOT_GRP} -G wheel -m ${NONROOT_USER} \
    && echo -e "[user]\ndefault=${NONROOT_USER}" >> /etc/wsl.conf

ENV BASH_ENV="/usr/bin/scl_enable_centos7" ENV="/usr/bin/scl_enable_centos7" PROMPT_COMMAND=". /usr/bin/scl_enable_centos7"