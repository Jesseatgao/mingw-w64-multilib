
# Arch: x86_64
FROM centos:7

SHELL ["/bin/bash", "-c"]

ARG BUILD=x86_64-unknown-linux-gnu
ARG TARGET=x86_64-w64-mingw32
ARG BUILDROOT=/usr/local
ARG SRC=$BUILDROOT/_src
ARG MINGW=$BUILDROOT/mingw32
ARG PREFIX=$MINGW

ARG CFLAGS=
ARG CXXFLAGS=
ARG LDFLAGS=

ENV PATH $PREFIX/bin:$PATH

ARG GCC_VER=10.1.0
ARG BINUTILS_VER=2.34
ARG MPFR_VER=4.0.2
ARG GMP_VER=6.2.0
ARG MPC_VER=1.1.0
ARG ISL_VER=0.21

ARG MINGW_VER=7.0.0
ARG PTHREADS4W_VER=3.0.0

ARG RH_DTS_GCC_VER=9.3.1-2

COPY mingw-std-threads/* $SRC/mingw-std-threads/

RUN	yum install -y centos-release-scl epel-release && yum makecache \
	&& yum install -y --setopt=tsflags=nodocs devtoolset-9-gcc-c++-${RH_DTS_GCC_VER}.el7 devtoolset-9-make bison flex gperf patch autoconf automake \
		libtool gettext-devel bzip2 unzip file texinfo glibc-devel glibc-devel.i686 llvm-toolset-7.0-cmake rh-ruby26 meson \
		libstdc++-static.i686 libstdc++-static.x86_64 glibc-static.i686 glibc-static.x86_64 \
	&& yum localinstall -y https://yum.oracle.com/repo/OracleLinux/OL7/SoftwareCollections/x86_64/getPackage/devtoolset-9-libstdc++-devel-${RH_DTS_GCC_VER}.el7.i686.rpm \
	&& yum clean all \
\
	&& source scl_source enable devtoolset-9 && source scl_source enable rh-ruby26 \
	&& gem install rake && pip3 install --upgrade --no-cache-dir meson \
\
\
	&& mkdir -p $MINGW && mkdir -p $SRC && cd $SRC \
	&& curl -L -O https://ftp.gnu.org/gnu/gcc/gcc-$GCC_VER/gcc-$GCC_VER.tar.xz \
	&& curl -L -O https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS_VER.tar.xz \
	&& curl -L -O https://ftp.gnu.org/gnu/mpfr/mpfr-$MPFR_VER.tar.xz \
	&& curl -L -O https://ftp.gnu.org/gnu/gmp/gmp-$GMP_VER.tar.xz \
	&& curl -L -O https://ftp.gnu.org/gnu/mpc/mpc-$MPC_VER.tar.gz \
	&& curl -L -O http://isl.gforge.inria.fr/isl-$ISL_VER.tar.xz \
	&& curl -L -o mingw-w64-$MINGW_VER.tar.gz https://github.com/mirror/mingw-w64/archive/v$MINGW_VER.tar.gz \
	&& curl -L -O https://sourceforge.net/projects/pthreads4w/files/pthreads4w-code-v$PTHREADS4W_VER.zip \
\
	&& tar Jxvf gcc-$GCC_VER.tar.xz \
	&& tar Jxvf binutils-$BINUTILS_VER.tar.xz \
	&& tar Jxvf mpfr-$MPFR_VER.tar.xz \
	&& tar Jxvf gmp-$GMP_VER.tar.xz \
	&& tar zxvf mpc-$MPC_VER.tar.gz \
	&& tar Jxvf isl-$ISL_VER.tar.xz \
	&& tar zxvf mingw-w64-$MINGW_VER.tar.gz \
	&& mkdir pthreads4w && unzip -d pthreads4w pthreads4w-code-v$PTHREADS4W_VER.zip && mv pthreads4w/pthreads4w-code*/* pthreads4w/ \
\
	&& mv mpfr-$MPFR_VER gcc-$GCC_VER/mpfr \
	&& mv gmp-$GMP_VER gcc-$GCC_VER/gmp \
	&& mv mpc-$MPC_VER gcc-$GCC_VER/mpc \
	&& mv isl-$ISL_VER gcc-$GCC_VER/isl \
\
	&& mkdir -p $BUILDROOT/binutils \
	&& cd $BUILDROOT/binutils \
	&& $SRC/binutils-$BINUTILS_VER/configure --prefix=$PREFIX --with-sysroot=$PREFIX \
		--target=$TARGET --enable-targets=x86_64-w64-mingw32,i686-w64-mingw32 --build=$BUILD \
	&& make -j $(( $(nproc) + 3 )) && make install \
\
	&& mkdir -p $BUILDROOT/headers \
	&& cd $BUILDROOT/headers \
	&& $SRC/mingw-w64-$MINGW_VER/mingw-w64-headers/configure --prefix=$PREFIX/$TARGET --host=$TARGET --build=$BUILD \
	&& make install \
\
	&& ln -s $PREFIX/$TARGET $PREFIX/mingw \
	&& mkdir -p $PREFIX/$TARGET/lib && mkdir -p $PREFIX/$TARGET/lib32 \
	&& ln -s $PREFIX/$TARGET/lib $PREFIX/$TARGET/lib64 \
\
	&& mkdir -p $BUILDROOT/gcc \
	&& cd $BUILDROOT/gcc \
	&& $SRC/gcc-$GCC_VER/configure --build=$BUILD --target=$TARGET \
		--enable-targets=x86_64-w64-mingw32,i686-w64-mingw32 --prefix=$PREFIX --with-sysroot=$PREFIX \
		--enable-languages=c,c++ --enable-multiarch --enable-multilib --with-multilib-list=m32,m64 --enable-64bit \
		--enable-threads=win32 --enable-shared --enable-fully-dynamic-string \
		--enable-lto --disable-libstdcxx-pch --enable-libgomp \
	&& make all-gcc -j $(( $(nproc) + 3 )) && make install-gcc \
\
	&& mkdir -p $BUILDROOT/mingw \
	&& cd $BUILDROOT/mingw \
	&& $SRC/mingw-w64-$MINGW_VER/mingw-w64-crt/configure --prefix=$PREFIX/$TARGET --with-sysroot=$PREFIX --host=$TARGET \
		--enable-lib32=yes --enable-lib64=yes \
	&& make -j $(( $(nproc) + 3 )) && make install \
\
	&& cd $BUILDROOT/gcc \
	&& make all-target-libgcc -j $(( $(nproc) + 3 )) && make install-target-libgcc \
\
	&& cd $SRC/pthreads4w && autoheader && autoconf \
	&& mkdir -p $BUILDROOT/pthreads4w \
	&& cd $BUILDROOT/pthreads4w \
	&& CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++ AR=x86_64-w64-mingw32-ar OBJDUMP=x86_64-w64-mingw32-objdump \
	    RANLIB=x86_64-w64-mingw32-ranlib RC="x86_64-w64-mingw32-windres -F pe-i386" DLLTOOL="x86_64-w64-mingw32-dlltool -m i386" \
	    $SRC/pthreads4w/configure --host=i686-w64-mingw32 \
	&& make realclean GC ARCH="-m32" \
	&& cp -f libpthreadGC3.dll.a pthreadGC3.dll $PREFIX/$TARGET/lib32 \
	&& mv $PREFIX/$TARGET/lib32/libpthreadGC3.dll.a $PREFIX/$TARGET/lib32/libpthread.dll.a \
	&& mv $PREFIX/$TARGET/lib32/pthreadGC3.dll $PREFIX/$TARGET/lib32/pthread.dll \
	&& make realclean GC-static ARCH="-m32" \
	&& cp -f libpthreadGC3.a $PREFIX/$TARGET/lib32 \
	&& mv $PREFIX/$TARGET/lib32/libpthreadGC3.a $PREFIX/$TARGET/lib32/libpthread.a \
	&& CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++ AR=x86_64-w64-mingw32-ar OBJDUMP=x86_64-w64-mingw32-objdump \
	    RANLIB=x86_64-w64-mingw32-ranlib RC="x86_64-w64-mingw32-windres -F pe-x86-64" DLLTOOL="x86_64-w64-mingw32-dlltool -m i386:x86-64" \
	    $SRC/pthreads4w/configure --host=x86_64-w64-mingw32 \
	&& make realclean GC ARCH="-m64" \
	&& cp -f libpthreadGC3.dll.a pthreadGC3.dll $PREFIX/$TARGET/lib \
	&& mv $PREFIX/$TARGET/lib/libpthreadGC3.dll.a $PREFIX/$TARGET/lib/libpthread.dll.a \
	&& mv $PREFIX/$TARGET/lib/pthreadGC3.dll $PREFIX/$TARGET/lib/pthread.dll \
	&& make realclean GC-static ARCH="-m64" \
	&& cp -f libpthreadGC3.a $PREFIX/$TARGET/lib \
	&& mv $PREFIX/$TARGET/lib/libpthreadGC3.a $PREFIX/$TARGET/lib/libpthread.a \
	&& cp -f $SRC/pthreads4w/pthread.h $SRC/pthreads4w/sched.h $SRC/pthreads4w/semaphore.h $SRC/pthreads4w/_ptw32.h $PREFIX/$TARGET/include \
\
    && cd $BUILDROOT/gcc \
    && make -j $(( $(nproc) + 3 )) && make install \
\
    && mv $MINGW/$TARGET/include/c++/$GCC_VER/condition_variable $MINGW/$TARGET/include/c++/$GCC_VER/condition_variable.h \
    && mv $MINGW/$TARGET/include/c++/$GCC_VER/future $MINGW/$TARGET/include/c++/$GCC_VER/future.h \
    && mv $MINGW/$TARGET/include/c++/$GCC_VER/mutex $MINGW/$TARGET/include/c++/$GCC_VER/mutex.h \
    && mv $MINGW/$TARGET/include/c++/$GCC_VER/shared_mutex $MINGW/$TARGET/include/c++/$GCC_VER/shared_mutex.h \
    && mv $MINGW/$TARGET/include/c++/$GCC_VER/thread $MINGW/$TARGET/include/c++/$GCC_VER/thread.h \
    && cp -f $SRC/mingw-std-threads/* $MINGW/$TARGET/include/c++/$GCC_VER/ \
\
	&& cd $MINGW/lib/gcc/$TARGET/$GCC_VER && $TARGET-gcc -dumpspecs > specs \
	&& sed -i '/\*cpp:/!b; n; s%\(.*\)%\1 -I/opt/mingw32/x86_64-w64-mingw32/include -I/opt/mingw32/i686-w64-mingw32/include -I/opt/mingw32/include%' specs \
	&& sed -i '/\*cc1plus:/!b; n; s%\(.*\)%\1 -I/opt/mingw32/x86_64-w64-mingw32/include -I/opt/mingw32/i686-w64-mingw32/include -I/opt/mingw32/include%' specs \
	&& sed -i '/\*link_libgcc:/!b; n; s%\(.*\)%\1 -L/opt/mingw32/x86_64-w64-mingw32/lib -L/opt/mingw32/i686-w64-mingw32/lib -L/opt/mingw32/lib%' specs \
\
	&& echo -e "source scl_source enable devtoolset-9\nsource scl_source enable llvm-toolset-7.0\nsource scl_source enable rh-ruby26\nunset BASH_ENV PROMPT_COMMAND ENV" > /usr/bin/scl_enable_centos7 \
	&& chmod +x /usr/bin/scl_enable_centos7 \
\
	&& cd $BUILDROOT && rm -rf $BUILDROOT/binutils $BUILDROOT/headers $BUILDROOT/gcc $BUILDROOT/mingw $BUILDROOT/pthreads4w \
	&& rm -rf $SRC \
	&& strip -s $MINGW/bin/$TARGET-* && strip -s $MINGW/$TARGET/lib/*.dll && strip -s $MINGW/$TARGET/lib32/*.dll \
	&& cd $MINGW/libexec/gcc/$TARGET/$GCC_VER && strip -s cc1 cc1plus collect2 lto-wrapper lto1

ENV BASH_ENV="/usr/bin/scl_enable_centos7" ENV="/usr/bin/scl_enable_centos7" PROMPT_COMMAND=". /usr/bin/scl_enable_centos7"